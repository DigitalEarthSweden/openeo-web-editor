{"version":3,"sources":["webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/pointer/EventType.js"],"names":["EventSource","dispatcher","mapping","this","mapping_","prototype","getEvents","Object","keys","getHandlerForEvent","eventType","POINTER_ID","POINTER_TYPE","DEDUP_DIST","mousedown","inEvent","isEventSimulatedFromTouch_","toString","pointerMap","cancel","e","prepareEvent","down","mousemove","move","mouseup","p","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","MouseSource","call","lastTouches","__proto__","create","constructor","lts","x","clientX","y","clientY","i","l","length","t","dx","Math","abs","dy","cloneEvent","pd","preventDefault","pointerId","isPrimary","pointerType","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","dispatchEvent","msGotPointerCapture","MsSource","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","NativeSource","HAS_BUTTONS","PointerEvent","_Event","type","originalEvent","opt_eventDict","eventDict","buttons","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","width","height","tiltX","tiltY","hwTimestamp","which","ev","MouseEvent","CLICK_COUNT_TIMEOUT","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","TouchSource","mouseSource","firstTouchId_","undefined","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","bind","clearTimeout","touchToPointer_","browserEvent","radiusX","radiusY","force","inFunction","touches","Array","slice","pointer","findTouch_","touchList","searchId","touch","d","key","Number","value","push","out","i$1","target","outTarget","over","enter","event","outEvent","leave","cleanUpPointer_","lt","CLONE_PROPS","EventTarget","PointerEventHandler","element","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","name","source","s","newEvents","forEach","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","ii","data","fireEvent","POINTERDOWN","POINTERMOVE","POINTERUP","POINTERENTER","POINTERLEAVE","POINTEROVER","POINTEROUT","POINTERCANCEL","contains_","container","contained","contains","inType","wrapMouseEvent","pointerEvent","disposeInternal"],"mappings":"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","file":"js/chunk-2fe24b45.c54bd24e.js","sourcesContent":["/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = /*@__PURE__*/(function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = /*@__PURE__*/(function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = /*@__PURE__*/(function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = /*@__PURE__*/(function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = /*@__PURE__*/(function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map"],"sourceRoot":""}