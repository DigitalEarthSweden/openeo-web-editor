{"version":3,"sources":["webpack:///./node_modules/ol/layer/VectorRenderType.js","webpack:///./node_modules/ol/layer/VectorTileRenderType.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/interaction/Select.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/layer/Heatmap.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/layer/VectorTile.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/interaction/Draw.js","webpack:///./node_modules/ol/interaction/Snap.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/layer/Image.js","webpack:///./node_modules/ol/layer/Property.js"],"names":["IMAGE","VECTOR","HYBRID","Layer","BaseLayer","options","baseOptions","source","call","this","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","map","setMap","SOURCE","handleSourcePropertyChange_","setSource","__proto__","prototype","Object","create","constructor","getLayersArray","opt_array","array","push","getLayerStatesArray","opt_states","states","getLayerState","getSource","get","getSourceState","getState","UNDEFINED","handleSourceChange_","changed","CHANGE","PRECOMPOSE","evt","renderEvent","layerState","managed","undefined","getZIndex","zIndex","Infinity","frameState","layerStatesArray","layerStates","render","set","visibleAtResolution","resolution","visible","minResolution","maxResolution","SelectEventType","SELECT","SelectEvent","Event","type","selected","deselected","mapBrowserEvent","Select","Interaction","opt_options","handleEvent","condition_","condition","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","filter","hitTolerance_","hitTolerance","layerFilter","featureOverlay","useSpatialIndex","features","wrapX","style","getDefaultStyleFunction","updateWhileAnimating","updateWhileInteracting","featureOverlay_","layers","layer","layerFilter_","featureLayerAssociation_","getFeatures","ADD","addFeature_","REMOVE","removeFeature_","addFeatureLayerAssociation_","feature","getFeaturesCollection","getHitTolerance","getLayer","getOverlay","setHitTolerance","currentMap","getMap","selectedFeatures","forEach","unskipFeature","bind","skipFeature","removeFeatureLayerAssociation_","add","remove","toggle","forEachFeatureAtPixel","pixel","i","getLength","item","index","indexOf","splice","length","extend","getArray","j","dispatchEvent","styles","POLYGON","LINE_STRING","GEOMETRY_COLLECTION","getGeometry","getType","assign","target","var_sources","arguments$1","arguments","TypeError","output","ii","key","hasOwnProperty","clear","object","property","getValues","values","isEmpty","DoubleClickZoom","delta_","delta","duration_","duration","stopEvent","MapBrowserEventType","DBLCLICK","browserEvent","anchor","coordinate","shiftKey","view","getView","preventDefault","PointerInteraction","DragPan","stopDown","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","noKinetic_","handleDragEvent","setHint","ViewHint","INTERACTING","targetPointers","centroid","update","deltaX","deltaY","center","getResolution","getRotation","getCenter","constrainCenter","setCenter","begin","handleUpEvent","end","distance","getDistance","angle","getAngle","centerpx","getPixelFromCoordinate","dest","getCoordinateFromPixel","Math","cos","sin","animate","easing","handleDownEvent","getAnimating","viewState","Pointer","DragRotate","lastAngle_","getConstraints","rotation","size","getSize","offset","theta","atan2","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","DragBox","box_","className","minArea_","minArea","onBoxEnd_","onBoxEnd","startPixel_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","startPixel","endPixel","width","height","setPixels","DragZoom","out_","out","extent","getExtent","mapExtent","calculateExtent","boxPixelExtent","factor","getResolutionForExtent","constrainResolution","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","EventType","KEYDOWN","keyEvent","keyCode","KeyCode","DOWN","LEFT","RIGHT","UP","mapUnitsDelta","KeyboardZoom","KEYPRESS","charCode","charCodeAt","MAX_DELTA","Mode","TRACKPAD","WHEEL","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","MOUSEWHEEL","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","now","Date","abs","clearTimeout","setTimeout","pow","getMinResolution","getMaxResolution","rebound","max","min","calculateCenterZoom","setResolution","timeLeft","handleWheelZoom_","cancelAnimations","maxDelta","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","clientY","clientX","viewportPosition","getViewport","getBoundingClientRect","left","top","handlingDownUpSequence","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","dx","dy","sqrt","newResolution","direction","defaults","interactions","Collection","Kinetic","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","Property","RENDER_ORDER","VectorLayer","renderBuffer","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","getRenderMode","handleMoveEvent","trackedPointers_","updateTrackedPointers_","POINTERDRAG","POINTERUP","handledUp","POINTERDOWN","handled","POINTERMOVE","isPointerDraggingEvent","event","pointerEvent","id","pointerId","toString","pointerEvents","BaseObject","map_","setActive","getActive","ACTIVE","active","pan","opt_duration","currentCenter","rotate","opt_anchor","constrainRotation","rotateWithoutConstraints","currentRotation","zoom","opt_direction","zoomWithoutConstraints","zoomByDelta","currentResolution","resolutions","getResolutions","BLUR","GRADIENT","RADIUS","DEFAULT_GRADIENT","Heatmap","gradient","radius","blur","shadow","weight","gradient_","shadow_","circleImage_","styleCache_","handleGradientChanged_","setGradient","setBlur","setRadius","handleStyleChanged_","weightFunction","opacity","image","src","RENDER","handleRender_","createCircle_","getRadius","getBlur","halfSize","context","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","beginPath","arc","PI","fill","canvas","toDataURL","getGradient","createGradient","Array","getImageData","view8","data","alpha","putImageData","colors","createLinearGradient","step","addColorStop","fillStyle","fillRect","TileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","TILE","getPreload","PRELOAD","getUseInterimTilesOnError","USE_INTERIM_TILES_ON_ERROR","properties","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","setProperties","state_","state","getOpacity","sourceState","getVisible","EXTENT","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","window","devicePixelRatio","CANVAS_LINE_DASH","has","document","createElement","getContext","setLineDash","e","TOUCH","POINTER","MSPOINTER","all","clamp","value","cosh","x","y","exp","squaredSegmentDistance","x1","y1","x2","y2","t","squaredDistance","solveLinearSystem","mat","n","maxRow","maxEl","r","absValue","tmp","coef","k","l","m","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","a","b","lerp","VectorTileLayer","VECTOR_TILE","LAYERS","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","isArray","slice","unique","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","PROPERTYCHANGE","collectionEvent","pos","ownLayerState","READY","POINT","CIRCLE","DrawEventType","DRAWSTART","DRAWEND","DrawEvent","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","source_","features_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","coordinates","opt_geometry","circle","NaN","squaredLength","setCenterAndRadius","Constructor","mode","geometry","setCoordinates","concat","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName_","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","originalEvent","CONTEXTMENU","move","pass","addToDrawing_","handlePointerMove_","pointerType","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","sketchPointGeom","updateSketchFeatures_","start","setGeometryName","setGeometry","last","sketchLineGeom","ring","getLinearRing","setFlatCoordinates","getLayout","getFlatCoordinates","done","pop","removeLastPoint","sketchFeature","getCoordinates","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","addFeature","lineString","sketchFeatures","overlaySource","addFeatures","getFeatureFromEvent","element","Snap","vertex_","vertex","edge_","edge","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","pixelTolerance","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeGeometryCollectionGeometry_","writeCircleGeometry_","opt_listen","register","feature_uid","segmentWriter","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","removeFeature","getFeatures_","result","snapTo","snapped","vertexPixel","handleFeatureAdd_","handleFeatureRemove_","uid","updateFeature_","featuresToUpdate","opt_unlisten","unregister","rBush","nodesToRemove","forEachInExtent","node","keys","ADDFEATURE","REMOVEFEATURE","pixelCoordinate","lowerLeft","upperRight","box","segments","getInExtent","segment","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","sort","closestSegment","isCircle","round","polygon","segmentData","insert","geometries","getGeometriesArray","lines","jj","points","polygons","kk","rings","deltaA","deltaB","ImageLayer"],"mappings":"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","file":"js/chunk-5dc31f06.39dc5548.js","sourcesContent":["/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/interaction/Select\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /*@__PURE__*/(function (Event) {\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) SelectEvent.__proto__ = Event;\n  SelectEvent.prototype = Object.create( Event && Event.prototype );\n  SelectEvent.prototype.constructor = SelectEvent;\n\n  return SelectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /*@__PURE__*/(function (Interaction) {\n  function Select(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    var featureOverlay = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        features: options.features,\n        wrapX: options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @private\n     * @type {VectorLayer}\n     */\n    this.featureOverlay_ = featureOverlay;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n\n    var features = this.getFeatures();\n    listen(features, CollectionEventType.ADD,\n      this.addFeature_, this);\n    listen(features, CollectionEventType.REMOVE,\n      this.removeFeature_, this);\n  }\n\n  if ( Interaction ) Select.__proto__ = Interaction;\n  Select.prototype = Object.create( Interaction && Interaction.prototype );\n  Select.prototype.constructor = Select;\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  Select.prototype.addFeatureLayerAssociation_ = function addFeatureLayerAssociation_ (feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  };\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  Select.prototype.getFeatures = function getFeatures () {\n    return /** @type {VectorSource} */ (this.featureOverlay_.getSource()).getFeaturesCollection();\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {VectorLayer} Layer.\n   * @api\n   */\n  Select.prototype.getLayer = function getLayer (feature) {\n    return (\n      /** @type {VectorLayer} */ (this.featureLayerAssociation_[getUid(feature)])\n    );\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders selected features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Select.prototype.getOverlay = function getOverlay () {\n    return this.featureOverlay_;\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @override\n   * @api\n   */\n  Select.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var selectedFeatures = this.getFeatures();\n    if (currentMap) {\n      selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n    }\n    Interaction.prototype.setMap.call(this, map);\n    this.featureOverlay_.setMap(map);\n    if (map) {\n      selectedFeatures.forEach(map.skipFeature.bind(map));\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.addFeature_ = function addFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.skipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.removeFeature_ = function removeFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.unskipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  Select.prototype.removeFeatureLayerAssociation_ = function removeFeatureLayerAssociation_ (feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  };\n\n  return Select;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  var add = this.addCondition_(mapBrowserEvent);\n  var remove = this.removeCondition_(mapBrowserEvent);\n  var toggle = this.toggleCondition_(mapBrowserEvent);\n  var set = !add && !remove && !toggle;\n  var map = mapBrowserEvent.map;\n  var features = this.getFeatures();\n  var deselected = [];\n  var selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var i = features.getLength() - 1; i >= 0; --i) {\n      var feature = features.item(i);\n      var index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\nexport default Select;\n\n//# sourceMappingURL=Select.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport VectorRenderType from './VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = /*@__PURE__*/(function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {import(\"../style/Style.js\").StyleLike}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {import(\"./VectorTileRenderType.js\").default|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {import(\"../style/Style.js\").StyleLike}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {import(\"./VectorRenderType.js\").default|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {import(\"../source/Vector.js\").default} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/layer/Heatmap\n */\nimport {listen} from '../events.js';\nimport {getChangeEventType} from '../Object.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport VectorLayer from './Vector.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport Icon from '../style/Icon.js';\nimport Style from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Heatmap = /*@__PURE__*/(function (VectorLayer) {\n  function Heatmap(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.shadow;\n    delete baseOptions.weight;\n    VectorLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Uint8ClampedArray}\n     */\n    this.gradient_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.circleImage_ = undefined;\n\n    /**\n     * @private\n     * @type {Array<Array<import(\"../style/Style.js\").default>>}\n     */\n    this.styleCache_ = null;\n\n    listen(this,\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_, this);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    listen(this,\n      getChangeEventType(Property.BLUR),\n      this.handleStyleChanged_, this);\n    listen(this,\n      getChangeEventType(Property.RADIUS),\n      this.handleStyleChanged_, this);\n\n    this.handleStyleChanged_();\n\n    var weight = options.weight ? options.weight : 'weight';\n    var weightFunction;\n    if (typeof weight === 'string') {\n      weightFunction = function(feature) {\n        return feature.get(weight);\n      };\n    } else {\n      weightFunction = weight;\n    }\n\n    this.setStyle(function(feature, resolution) {\n      var weight = weightFunction(feature);\n      var opacity = weight !== undefined ? clamp(weight, 0, 1) : 1;\n      // cast to 8 bits\n      var index = (255 * opacity) | 0;\n      var style = this.styleCache_[index];\n      if (!style) {\n        style = [\n          new Style({\n            image: new Icon({\n              opacity: opacity,\n              src: this.circleImage_\n            })\n          })\n        ];\n        this.styleCache_[index] = style;\n      }\n      return style;\n    }.bind(this));\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n\n    listen(this, RenderEventType.RENDER, this.handleRender_, this);\n  }\n\n  if ( VectorLayer ) Heatmap.__proto__ = VectorLayer;\n  Heatmap.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  Heatmap.prototype.constructor = Heatmap;\n\n  /**\n   * @return {string} Data URL for a circle.\n   * @private\n   */\n  Heatmap.prototype.createCircle_ = function createCircle_ () {\n    var radius = this.getRadius();\n    var blur = this.getBlur();\n    var halfSize = radius + blur + 1;\n    var size = 2 * halfSize;\n    var context = createCanvasContext2D(size, size);\n    context.shadowOffsetX = context.shadowOffsetY = this.shadow_;\n    context.shadowBlur = blur;\n    context.shadowColor = '#000';\n    context.beginPath();\n    var center = halfSize - this.shadow_;\n    context.arc(center, center, radius, 0, Math.PI * 2, true);\n    context.fill();\n    return context.canvas.toDataURL();\n  };\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getBlur = function getBlur () {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  };\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getGradient = function getGradient () {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  };\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getRadius = function getRadius () {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleGradientChanged_ = function handleGradientChanged_ () {\n    this.gradient_ = createGradient(this.getGradient());\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleStyleChanged_ = function handleStyleChanged_ () {\n    this.circleImage_ = this.createCircle_();\n    this.styleCache_ = new Array(256);\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Post compose event\n   * @private\n   */\n  Heatmap.prototype.handleRender_ = function handleRender_ (event) {\n    var context = event.context;\n    var canvas = context.canvas;\n    var image = context.getImageData(0, 0, canvas.width, canvas.height);\n    var view8 = image.data;\n    for (var i = 0, ii = view8.length; i < ii; i += 4) {\n      var alpha = view8[i + 3] * 4;\n      if (alpha) {\n        view8[i] = this.gradient_[alpha];\n        view8[i + 1] = this.gradient_[alpha + 1];\n        view8[i + 2] = this.gradient_[alpha + 2];\n      }\n    }\n    context.putImageData(image, 0, 0);\n  };\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setBlur = function setBlur (blur) {\n    this.set(Property.BLUR, blur);\n  };\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setGradient = function setGradient (colors) {\n    this.set(Property.GRADIENT, colors);\n  };\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setRadius = function setRadius (radius) {\n    this.set(Property.RADIUS, radius);\n  };\n\n  return Heatmap;\n}(VectorLayer));\n\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {Uint8ClampedArray} An array.\n */\nfunction createGradient(colors) {\n  var width = 1;\n  var height = 256;\n  var context = createCanvasContext2D(width, height);\n\n  var gradient = context.createLinearGradient(0, 0, width, height);\n  var step = 1 / (colors.length - 1);\n  for (var i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.getImageData(0, 0, width, height).data;\n}\n\n\nexport default Heatmap;\n\n//# sourceMappingURL=Heatmap.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /*@__PURE__*/(function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      var extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/layer/VectorTile\n */\nimport LayerType from '../LayerType.js';\nimport {assert} from '../asserts.js';\nimport TileProperty from './TileProperty.js';\nimport VectorLayer from './Vector.js';\nimport VectorTileRenderType from './VectorTileRenderType.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"./VectorTileRenderType.js\").default|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance than the other options.\n *\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\n * `'hybrid'`.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options=} opt_options Options.\n * @api\n */\nvar VectorTileLayer = /*@__PURE__*/(function (VectorLayer) {\n  function VectorTileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n    assert(renderMode == undefined ||\n       renderMode == VectorTileRenderType.IMAGE ||\n       renderMode == VectorTileRenderType.HYBRID ||\n       renderMode == VectorTileRenderType.VECTOR,\n    28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`\n    if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\n      renderMode = VectorTileRenderType.HYBRID;\n    }\n    options.renderMode = renderMode;\n\n    var baseOptions = /** @type {Object} */ (assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    VectorLayer.call(/** @type {import(\"./Vector.js\").Options} */ this, (baseOptions));\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR_TILE;\n\n  }\n\n  if ( VectorLayer ) VectorTileLayer.__proto__ = VectorLayer;\n  VectorTileLayer.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  VectorTileLayer.prototype.constructor = VectorTileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return VectorTileLayer;\n}(VectorLayer));\n\n\n/**\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\n * @function\n * @return {import(\"../source/VectorTile.js\").default} Source.\n * @api\n */\nVectorTileLayer.prototype.getSource;\nexport default VectorTileLayer;\n\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /*@__PURE__*/(function (Event) {\n  function DrawEvent(type, feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n  if ( Event ) DrawEvent.__proto__ = Event;\n  DrawEvent.prototype = Object.create( Event && Event.prototype );\n  DrawEvent.prototype.constructor = DrawEvent;\n\n  return DrawEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /*@__PURE__*/(function (PointerInteraction) {\n  function Draw(options) {\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    var geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          var squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        var Constructor;\n        var mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  if ( PointerInteraction ) Draw.__proto__ = PointerInteraction;\n  Draw.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Draw.prototype.constructor = Draw;\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.setMap = function setMap (map) {\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_();\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Draw.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @override\n   * @api\n   */\n  Draw.prototype.handleEvent = function handleEvent (event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    var move = event.type === MapBrowserEventType.POINTERMOVE;\n    var pass = true;\n    if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n      var now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDRAG &&\n        this.sketchFeature_ !== null) {\n      this.addToDrawing_(event);\n      pass = false;\n    } else if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDOWN) {\n      pass = false;\n    } else if (move) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        pass = this.handlePointerMove_(event);\n      } else if (/** @type {MapBrowserPointerEvent} */ (event).pointerEvent.pointerType == POINTER_TYPE ||\n          (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return PointerInteraction.prototype.handleEvent.call(this, event) && pass;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleDownEvent = function handleDownEvent (event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(function() {\n        this.handlePointerMove_(new MapBrowserPointerEvent(\n          MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n      }.bind(this), this.dragVertexDelay_);\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleUpEvent = function handleUpEvent (event) {\n    var pass = true;\n\n    if (this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n\n    this.handlePointerMove_(event);\n\n    var circleMode = this.mode_ === Mode.CIRCLE;\n\n    if (this.shouldHandle_) {\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n        if (this.mode_ === Mode.POINT) {\n          this.finishDrawing();\n        }\n      } else if (this.freehand_ || circleMode) {\n        this.finishDrawing();\n      } else if (this.atFinish_(event)) {\n        if (this.finishCondition_(event)) {\n          this.finishDrawing();\n        }\n      } else {\n        this.addToDrawing_(event);\n      }\n      pass = false;\n    } else if (this.freehand_) {\n      this.finishCoordinate_ = null;\n      this.abortDrawing_();\n    }\n    if (!pass && this.stopClick_) {\n      event.stopPropagation();\n    }\n    return pass;\n  };\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  Draw.prototype.handlePointerMove_ = function handlePointerMove_ (event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      var downPx = this.downPx_;\n      var clickPx = event.pixel;\n      var dx = downPx[0] - clickPx[0];\n      var dy = downPx[1] - clickPx[1];\n      var squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  };\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  Draw.prototype.atFinish_ = function atFinish_ (event) {\n    var at = false;\n    if (this.sketchFeature_) {\n      var potentiallyDone = false;\n      var potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        var map = event.map;\n        for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          var finishCoordinate = potentiallyFinishCoordinates[i];\n          var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          var pixel = event.pixel;\n          var dx = pixel[0] - finishPixel[0];\n          var dy = pixel[1] - finishPixel[1];\n          var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.createOrUpdateSketchPoint_ = function createOrUpdateSketchPoint_ (event) {\n    var coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  };\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.startDrawing_ = function startDrawing_ (event) {\n    var start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    var geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.modifyDrawing_ = function modifyDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (geometry.getType() == GeometryType.POLYGON &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      var ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.addToDrawing_ = function addToDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var done;\n    var coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  };\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  Draw.prototype.removeLastPoint = function removeLastPoint () {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates;\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  Draw.prototype.finishDrawing = function finishDrawing () {\n    var sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    var coordinates = this.sketchCoords_;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */(coordinates)]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  };\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  Draw.prototype.abortDrawing_ = function abortDrawing_ () {\n    this.finishCoordinate_ = null;\n    var sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).clear(true);\n    }\n    return sketchFeature;\n  };\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!Feature} feature Feature to be extended.\n   * @api\n   */\n  Draw.prototype.extend = function extend (feature) {\n    var geometry = feature.getGeometry();\n    var lineString = /** @type {LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  Draw.prototype.updateSketchFeatures_ = function updateSketchFeatures_ () {\n    var sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    var overlaySource = /** @type {VectorSource} */ (this.overlay_.getSource());\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  };\n\n  /**\n   * @private\n   */\n  Draw.prototype.updateState_ = function updateState_ () {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  };\n\n  return Draw;\n}(PointerInteraction));\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    var center = /** @type {LineCoordType} */ (coordinates)[0];\n    var end = /** @type {LineCoordType} */ (coordinates)[1];\n    var radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    var angle = opt_angle;\n    if (!opt_angle) {\n      var x = end[0] - center[0];\n      var y = end[1] - center[1];\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n    }\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n      var boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      var geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n\n//# sourceMappingURL=Draw.js.map","/**\n * @module ol/interaction/Snap\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (/** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature;\n  } else if (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element) {\n    return /** @type {import(\"../Feature.js\").default} */ (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element);\n  }\n\n}\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nvar Snap = /*@__PURE__*/(function (PointerInteraction) {\n  function Snap(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * Used for distance sorting in sortByDistance_\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.pixelCoordinate_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {function(SegmentData, SegmentData): number}\n     * @private\n     */\n    this.sortByDistance_ = sortByDistance.bind(this);\n\n\n    /**\n    * Segment RTree for each layer\n    * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n    * @private\n    */\n    this.rBush_ = new RBush();\n\n\n    /**\n    * @const\n    * @private\n    * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default)>}\n    */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_,\n      'Circle': this.writeCircleGeometry_\n    };\n  }\n\n  if ( PointerInteraction ) Snap.__proto__ = PointerInteraction;\n  Snap.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Snap.prototype.constructor = Snap;\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.addFeature = function addFeature (feature, opt_listen) {\n    var register = opt_listen !== undefined ? opt_listen : true;\n    var feature_uid = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter.call(this, feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_, this);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureAdd_ = function forEachFeatureAdd_ (feature) {\n    this.addFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureRemove_ = function forEachFeatureRemove_ (feature) {\n    this.removeFeature(feature);\n  };\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  Snap.prototype.getFeatures_ = function getFeatures_ () {\n    var features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.handleEvent = function handleEvent (evt) {\n    var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result.snapped) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return PointerInteraction.prototype.handleEvent.call(this, evt);\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    var feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      var uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.handleUpEvent = function handleUpEvent (evt) {\n    var featuresToUpdate = getValues(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  };\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.removeFeature = function removeFeature (feature, opt_unlisten) {\n    var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    var feature_uid = getUid(feature);\n    var extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      var rBush = this.rBush_;\n      var nodesToRemove = [];\n      rBush.forEachInExtent(extent, function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var keys = this.featuresListenerKeys_;\n    var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    PointerInteraction.prototype.setMap.call(this, map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(this.features_, CollectionEventType.ADD,\n            this.handleFeatureAdd_, this),\n          listen(this.features_, CollectionEventType.REMOVE,\n            this.handleFeatureRemove_, this)\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(this.source_, VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_, this),\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_, this)\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @return {Result} Snap result\n   */\n  Snap.prototype.snapTo = function snapTo (pixel, pixelCoordinate, map) {\n\n    var lowerLeft = map.getCoordinateFromPixel(\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    var upperRight = map.getCoordinateFromPixel(\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    var box = boundingExtent([lowerLeft, upperRight]);\n\n    var segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function(segment) {\n        return segment.feature.getGeometry().getType() !==\n            GeometryType.CIRCLE;\n      });\n    }\n\n    var snappedToVertex = false;\n    var snapped = false;\n    var vertex = null;\n    var vertexPixel = null;\n    var dist, pixel1, pixel2, squaredDist1, squaredDist2;\n    if (segments.length > 0) {\n      this.pixelCoordinate_ = pixelCoordinate;\n      segments.sort(this.sortByDistance_);\n      var closestSegment = segments[0].segment;\n      var isCircle = segments[0].feature.getGeometry().getType() ===\n          GeometryType.CIRCLE;\n      if (this.vertex_ && !this.edge_) {\n        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n        squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        snappedToVertex = dist <= this.pixelTolerance_;\n        if (snappedToVertex) {\n          snapped = true;\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          vertexPixel = map.getPixelFromCoordinate(vertex);\n        }\n      } else if (this.edge_) {\n        if (isCircle) {\n          vertex = closestOnCircle(pixelCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (segments[0].feature.getGeometry()));\n        } else {\n          vertex = closestOnSegment(pixelCoordinate, closestSegment);\n        }\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n        if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n          snapped = true;\n          if (this.vertex_ && !isCircle) {\n            pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n            pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n            squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n            squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n            dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n            snappedToVertex = dist <= this.pixelTolerance_;\n            if (snappedToVertex) {\n              vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n              vertexPixel = map.getPixelFromCoordinate(vertex);\n            }\n          }\n        }\n      }\n      if (snapped) {\n        vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n      }\n    }\n    return (\n      /** @type {Result} */ ({\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel\n      })\n    );\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  Snap.prototype.updateFeature_ = function updateFeature_ (feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var polygon = fromCircle(geometry);\n    var coordinates = polygon.getCoordinates()[0];\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter.call(this, feature, geometries[i]);\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        segment: [coordinates, coordinates]\n      });\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            segment: segment\n          });\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  return Snap;\n}(PointerInteraction));\n\n\n/**\n * Sort segments by distance, helper function\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {Snap}\n */\nfunction sortByDistance(a, b) {\n  var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n\n//# sourceMappingURL=Snap.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/layer/Image\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar ImageLayer = /*@__PURE__*/(function (Layer) {\n  function ImageLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Layer.call(this, options);\n\n    /**\n     * The layer type.\n     * @protected\n     * @type {import(\"../LayerType.js\").default}\n     */\n    this.type = LayerType.IMAGE;\n\n  }\n\n  if ( Layer ) ImageLayer.__proto__ = Layer;\n  ImageLayer.prototype = Object.create( Layer && Layer.prototype );\n  ImageLayer.prototype.constructor = ImageLayer;\n\n  return ImageLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {import(\"../source/Image.js\").default} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map"],"sourceRoot":""}