{"version":3,"sources":["webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/render/ReplayGroup.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/canvas/Replay.js","webpack:///./node_modules/ol/render/canvas/ImageReplay.js","webpack:///./node_modules/ol/render/canvas/LineStringReplay.js","webpack:///./node_modules/ol/render/canvas/PolygonReplay.js","webpack:///./node_modules/ol/render/canvas/TextReplay.js","webpack:///./node_modules/ol/render/canvas/ReplayGroup.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/canvas/Map.js","webpack:///./node_modules/ol/render/replay.js","webpack:///./node_modules/ol/render/ReplayType.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/proj/Units.js"],"names":["POSTCOMPOSE","PRECOMPOSE","RENDER","RENDERCOMPLETE","Observable","LayerRenderer","layer","call","this","layer_","__proto__","prototype","Object","create","constructor","createLoadedTileFinder","source","projection","tiles","zoom","tileRange","callback","tile","tileCoord","toString","forEachLoadedTile","forEachFeatureAtCoordinate","coordinate","frameState","hitTolerance","getLayer","handleImageChange_","event","image","getState","ImageState","LOADED","renderIfReadyAndVisible","hasFeatureAtCoordinate","loadImage","imageState","ERROR","CHANGE","IDLE","load","getVisible","getSourceState","READY","changed","scheduleExpireCache","tileSource","canExpireCache","postRenderFunction","map","tileSourceKey","usedTiles","expireCache","viewState","bind","postRenderFunctions","push","updateUsedTiles","z","zKey","extend","manageTilePyramid","tileGrid","pixelRatio","extent","currentZ","preload","opt_tileCallback","opt_this","wantedTiles","tileResolution","x","y","tileQueue","minZoom","getMinZoom","getTileRangeForExtentAndZ","getResolution","minX","maxX","minY","maxY","getTile","TileState","getKey","isKeyQueued","enqueue","getTileCoordCenter","undefined","useTile","Layer","CanvasLayerRenderer","renderedResolution","transform_","clip","context","width","size","height","rotation","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","save","beginPath","moveTo","lineTo","dispatchComposeEvent_","type","opt_transform","hasListener","transform","getTransform","render","composeEvent","dispatchEvent","forEachLayerAtCoordinate","thisArg","hasFeature","postCompose","layerState","preCompose","dispatchRenderEvent","offsetX","dx1","dy1","sx","resolution","sy","angle","dx2","center","dy2","composeFrame","prepareFrame","getReplay","zIndex","replayType","isEmpty","addDeclutter","group","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","beginPathInstruction","closePathInstruction","tmpExtent","tmpTransform","VectorContext","CanvasReplay","tolerance","maxExtent","overlaps","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinates","coordinateCache_","renderedTransform_","hitDetectionInstructions","pixelCoordinates_","state","viewRotation_","replayTextBackground_","p1","p2","p3","p4","fillInstruction","strokeInstruction","apply","fill_","setStrokeStyle_","stroke","replayImage_","anchorX","anchorY","declutterGroup","opacity","originX","originY","scale","snapToPixel","padding","fillStroke","w","h","boxW","boxH","boxX","boxY","centerX","centerY","canvas","strokePadding","intersects","Math","round","declutterArgs","slice","applyPixelRatio","dashArray","dash","appendFlatCoordinates","flatCoordinates","offset","end","stride","closed","skipFirst","myEnd","length","getBufferedMaxExtent","i","lastRel","nextRel","lastCoord","nextCoord","NaN","skipped","Relationship","INTERSECTING","drawCustomCoordinates_","ends","replayEnds","ii","replayEnd","drawCustom","geometry","feature","renderer","beginGeometry","replayEndss","getType","getStride","replayBegin","GeometryType","MULTI_POLYGON","getOrientedFlatCoordinates","endss","getEndss","myEnds","inflate","POLYGON","MULTI_LINE_STRING","getFlatCoordinates","getEnds","LINE_STRING","MULTI_POINT","POINT","endGeometry","finish","origin","repeatSize","translate","rotate","fill","setTransform","instruction","strokeStyle","lineWidth","lineCap","lineJoin","miterLimit","lineDashOffset","setLineDash","renderDeclutter_","groupCount","box","value","collides","insert","j","jj","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","pixelCoordinates","dd","prevX","prevY","roundX","roundY","skipFeatures","d","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","batchSize","getGeometry","getExtent","x1","y1","x2","y2","dx","dy","r","sqrt","arc","PI","closePath","fn","coords","rotateWithView","backgroundFill","backgroundStroke","begin","baseline","overflow","fillKey","maxAngle","measure","offsetY","strokeKey","strokeWidth","text","textKey","textScale","pathLength","textLength","textReplay","textAlign","textStates","startM","parts","c","cc","chars","label","part","getImage","result","fillStyle","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","reverse","n","setFillStrokeStyle","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","lineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","getWidth","strokeStyleMiterLimit","getMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageReplay","declutterGroup_","hitDetectionImage_","image_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","width_","drawCoordinates_","drawPoint","pointGeometry","myBegin","drawMultiPoint","multiPointGeometry","setImageStyle","imageStyle","anchor","getAnchor","getSize","hitDetectionImage","getHitDetectionImage","getOrigin","getOpacity","getRotateWithView","getRotation","getScale","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","lastStroke","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","drawCircle","circleGeometry","setFillStrokeStyles_","circleInstruction","drawPolygon","polygonGeometry","drawMultiPolygon","multiPolygonGeometry","CanvasTextReplay","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textKey_","fillKey_","strokeKey_","widths_","prune","drawText","fillState","strokeState","textState","geometryType","placement","TextPlacement","LINE","flatEnd","flatOffset","o","oo","range","drawChars_","getFlatMidpoint","getCenter","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","drawTextImage_","key","containsKey","align","lines","split","numLines","widths","measureTextWidths","font","lineHeight","renderWidth","ceil","set","textBaseline","leftRight","strokeText","fillText","get","p","setTextStyle","textStyle","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","getText","join","currentWidth","max","BATCH_CONSTRUCTORS","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","overlaps_","pixelRatio_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","declutter","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","clearRect","declutteredFeatures","mask","getCircleArray","imageData","getImageData","data","ReplayType","IMAGE","TEXT","indexOf","all","entry","zs","keys","Number","sort","zIndexKey","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","restore","circleArrayCache","0","fillCircleArrayRowToMiddle","array","radius","floor","arraySize","arr","Array","error","replayDeclutter","skippedFeatureUids","zz","replayData","options","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","Projection","EPSG3857Projection","units","Units","METERS","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","output","halfSize","log","tan","atan","exp","METERS_PER_UNIT","EPSG4326Projection","opt_axisOrientation","DEGREES","cache","add","transforms","destination","transformFn","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","addProjections","projections","forEach","projectionLike","opt_units","pointResolution","getter","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","fromLonLat","opt_projection","toLonLat","lonLat","lon","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","transformExtent","addCommon","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","parseInt","getSquaredTolerance","getTolerance","replayGroup","style","circleReplay","getZIndex","renderFeature","squaredTolerance","listener","loading","getImageState","unlistenImageChange","listenImageChange","renderFeatureInternal","getGeometryFunction","simplifiedGeometry","getSimplifiedGeometry","getRenderer","renderGeometry","geometryRenderer","GEOMETRY_COLLECTION","DEFAULT","geometries","getGeometries","getGeometriesArray","lineStringReplay","polygonReplay","imageReplay","RenderEvent","Event","opt_vectorContext","opt_frameState","opt_context","opt_glContext","vectorContext","glContext","CanvasImageLayerRenderer","IntermediateCanvasRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","VECTOR","ctor","disposeInternal","dispose","getImageTransform","viewCenter","viewResolution","imageSource","getSource","hints","viewHints","vectorRenderer","renderedExtent","ANIMATING","INTERACTING","getProjection","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","compose","imageExtent","imageResolution","imagePixelRatio","getPixelRatio","coordinateToCanvasPixelTransform","getRenderMode","mapRenderer","hitCanvasContext_","clipped","imageTransform","alpha","globalAlpha","dw","dh","drawImage","pixel","Disposable","MapRenderer","map_","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","calculateMatrices2D","pixelToCoordinateTransform","removeLayerRenderers","removeLayerRendererByKey_","layerFilter","thisArg2","managed","layerStates","translatedCoordinate","projectionExtent","worldWidth","worldsAway","layerStatesArray","numLayers","layerRenderer","getLayerRenderer","getWrapX","forEachLayerAtPixel","layerKey","candidate","Error","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","getMap","removeUnusedLayerRenderers_","renderFrame","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","expireIconCache","expire","sortByZIndex","state1","state2","Map","layerRendererConstructors","CanvasMapRenderer","container","getViewport","context_","canvas_","display","className","insertBefore","childNodes","renderedVisible_","sourceState","ORDER","TEXT_ALIGN","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","CanvasTileLayerRenderer","getDeclutter","dirty_","renderedLayerRevision_","tmpTransform_","renderMode","zDirection","CLEAR","handleFontsChanged_","createReplayGroup_","renderTileImage_","getTileImage","tileLayer","layerRevision","getRevision","renderedTiles","this$1","revision","renderOrder","getRenderOrder","replayState","getReplayState","dirty","renderedRevision","renderedRenderOrder","sourceTileGrid","getTileGrid","getTileGridForProjection","tileExtent","loop","t","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","getTileCoordExtent","sharedExtent","bufferedExtent","getRenderBuffer","tileProjection","reproject","setProjection","getOverlaps","styles","styleFunction","getStyleFunction","features","getFeatures","TILE_PIXELS","setReplayGroup","found","getReplayGroup","getReplayTransform_","renderResolution","handleStyleImageChange_","clear","clips","ABORT","worldOffset","currentClip","isArray","renderedTileRevision","wrappedTileCoord","getContext","getTilePixelSize","pixelScale","VECTOR_TILE","opt_noContext","oversampling_","renderedExtent_","newTiles_","tmpTileRange_","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","EMPTY","getPreload","setState","getInterimTile","sourceRevision","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","Date","now","time","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getHeight","currentResolution","currentScale","currentTilePixelSize","tileGutter","tilesToDraw","a","b","tileCoordKey","getGutterForProjection","getTileCoord","drawTileImage","gutter","transition","getOpaque","alphaChanged","animate","endTransition","TILE","CanvasImmediateRenderer","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","moveToLineTo_","close","drawRings_","setStyle","drawGeometry","drawGeometryCollection","drawFeature","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageSize","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","RenderBox","geometry_","element_","document","createElement","position","startPixel_","endPixel_","setMap","render_","startPixel","endPixel","px","left","min","top","abs","getOverlayContainer","removeChild","appendChild","setPixels","createOrUpdateGeometry","pixels","getCoordinateFromPixel","setCoordinates","CanvasVectorLayerRenderer","vectorLayer","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","startX","world","mainContextAlpha","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadFeatures","forEachFeatureInExtent","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","len","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","fontFamily","setInterval","measureTextHeight","span","heights","textContent","margin","body","offsetHeight","measureTextWidth","rotateAtOffset","resetTransform","geometryCollectionGeometry","opt_declutterGroup","FEET","PIXELS","USFEET"],"mappings":"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","file":"js/chunk-a4548848.0c70d304.js","sourcesContent":["/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/render/ReplayGroup\n */\nimport {abstract} from '../util.js';\n\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n  return abstract();\n};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = /*@__PURE__*/(function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplay.prototype.finish = function finish () {};\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay = /** @type {?} */ (this);\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nvar CanvasPolygonReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    for (var zIndex in this.replaysByZIndex_) {\n      var candidates = this.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    for (var zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = /*@__PURE__*/(function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          var uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if ((this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) ||\n              this.renderedRevision != sourceRevision) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = /*@__PURE__*/(function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map"],"sourceRoot":""}