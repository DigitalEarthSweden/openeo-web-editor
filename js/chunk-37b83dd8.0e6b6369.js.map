{"version":3,"sources":["webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/style/IconAnchorUnits.js","webpack:///./node_modules/ol/style/IconImage.js","webpack:///./node_modules/ol/style/IconOrigin.js","webpack:///./node_modules/ol/style/Icon.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/string.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/source/Source.js"],"names":["POINT","LINE","XYZ","TileImage","opt_options","options","projection","undefined","tileGrid","extent","maxZoom","minZoom","tileSize","call","this","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","url","urls","wrapX","transition","attributionsCollapsible","__proto__","prototype","Object","create","constructor","RegularShape","ImageStyle","rotateWithView","opacity","rotation","scale","checksums_","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius","radius1","radius2_","radius2","angle_","angle","stroke_","stroke","anchor_","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","render_","clone","style","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","getRotation","getRotateWithView","setOpacity","getOpacity","setScale","getScale","getAnchor","getHitDetectionImage","pixelRatio","getImage","getImageSize","getHitDetectionImageSize","getImageState","LOADED","getOrigin","getSize","listenImageChange","listener","thisArg","load","unlistenImageChange","imageSize","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","size","renderOptions","context","canvas","width","draw_","createHitDetectionCanvas_","Math","round","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","bind","id","getChecksum","info","add","image","offsetX","offsetY","hitImage","height","x","y","i","angle0","radiusC","setTransform","translate","beginPath","Infinity","arc","PI","lineTo","cos","sin","color","fillStyle","lineWidth","setLineDash","closePath","strokeChecksum","fillChecksum","recalculate","checksum","toString","IconImageCache","cache_","cacheSize_","maxCacheSize_","getKey","src","colorString","clear","expire","key","iconImage","hasListener","get","set","setSize","maxCacheSize","shared","RBush","opt_maxEntries","rbush_","items_","insert","value","item","minX","minY","maxX","maxY","extents","values","items","Array","length","l","remove","uid","update","bbox","getAll","all","map","getInExtent","search","forEach","callback","opt_this","forEach_","forEachInExtent","result","isEmpty","getExtent","opt_extent","data","toJSON","concat","rbush","LRUCache","EventTarget","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","dispatchEvent","CLEAR","containsKey","hasOwnProperty","f","entry","value_","key_","newer","older","getKeys","keys","getValues","peekLast","peekLastKey","peekFirstKey","pop","replace","prune","VectorSourceEvent","Event","type","opt_feature","feature","VectorSource","Source","state","READY","loader_","format_","format","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","features","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","isArray","getArray","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","changed","featureKey","addToIndex_","setupChangeEvents_","geometry","getGeometry","ADDFEATURE","CHANGE","handleFeatureChange_","PROPERTYCHANGE","valid","getId","addFeatures","newFeatures","geometryFeatures","push","i$1","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","evt","REMOVEFEATURE","ADD","REMOVE","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","coordinate","forEachFeatureInExtent","intersectsCoordinate","forEachFeatureIntersectingExtent","intersectsExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","closestPoint","NaN","minSquaredDistance","filter","previousMinSquaredDistance","closestPointXY","minDistance","sqrt","getFeatureById","getFormat","getOverlaps","getUrl","event","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","loadFeatures","resolution","this$1","loadedExtentsRtree","extentsToLoad","loading","loop","ii","extentToLoad","alreadyLoaded","object","slice","removeLoadedExtent","obj","removed","setLoader","Style","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","image_","renderer_","renderer","text_","text","zIndex_","zIndex","toFunction","styleFunction","styles","getZIndex","getText","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","setZIndex","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","POLYGON","MULTI_POLYGON","LINE_STRING","MULTI_LINE_STRING","CIRCLE","MULTI_POINT","GEOMETRY_COLLECTION","FRACTION","PIXELS","IconImage","imageState","hitDetectionImage_","Image","document","createElement","color_","imageListenerKeys_","imageState_","src_","tainted_","isTainted_","ImageState","drawImage","getImageData","e","dispatchChangeEvent_","EventType","handleImageError_","ERROR","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","IDLE","LOADING","LOAD","ctx","getContext","imgData","r","g","b","putImageData","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Icon","anchor","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize","iconImage_","offset_","offset","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","UNDEFINED","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","lat1","lat2","deltaLatBy2","deltaLonBy2","a","atan2","distance","bearing","lon1","dByR","lat","asin","lon","Fill","checksum_","setColor","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","TileSource","opaque_","tilePixelRatio_","tileCache","TileCache","tmpSize","tileOptions","expireCache","usedTiles","getTileCacheForProjection","forEachLoadedTile","z","tileRange","tile","tileCoordKey","loaded","covered","getState","TileState","getGutterForProjection","setKey","getOpaque","getResolutions","getTile","getTileGrid","getTileGridForProjection","thisProj","getProjection","getTilePixelRatio","getTilePixelSize","getTileSize","getTileCoordForTileUrlFunction","tileCoord","opt_projection","getWrapX","isGlobal","refresh","useTile","TileSourceEvent","TILELOADSTART","TILELOADEND","TILELOADERROR","UrlTile","generateTileUrlFunction_","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","handleTileChange","tileState","TileEventType","ABORT","setTileLoadFunction","pruneExceptNewestZ","join","defaultTileLoadFunction","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","EMPTY","sourceProjection","cache","sourceTileGrid","targetTileGrid","wrappedTileCoord","newTile","getTileInternal","interimTile","refreshInterimChain","setRenderReprojectionEdges","render","setTileGridForProjection","tilegrid","proj","imageTile","opacity_","rotateWithView_","rotation_","scale_","getSnapToPixel","setRotateWithView","setRotation","setSnapToPixel","snapToPixel","padNumber","number","opt_precision","numberString","toFixed","decimal","indexOf","CircleStyle","setRadius","ATTRIBUTION","OSM","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","element","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","index","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","n","BaseObject","projection_","attributions_","adaptAttributions","attributionsCollapsible_","state_","wrapX_","getAttributions","getAttributionsCollapsible","setAttributions","setState","attributionLike","frameState"],"mappings":"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","file":"js/chunk-37b83dd8.0e6b6369.js","sourcesContent":["/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /*@__PURE__*/(function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asString} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /*@__PURE__*/(function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string|number>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./AtlasManager.js\").default|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {import(\"./AtlasManager.js\").default|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = asString(defaultFillStyle);\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return /** @type {string} */ (this.checksums_[0]);\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<string, Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  var data = this.rbush_.toJSON();\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this.items_[i] = rbush.items_[i];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = /*@__PURE__*/(function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector.VectorSourceEvent\n * @api\n */\nvar VectorSource = /*@__PURE__*/(function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {import(\"../Feature.js\").default} feature Feature to add.\n   * @api\n   */\n  VectorSource.prototype.addFeature = function addFeature (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @private\n   */\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  };\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n   * @api\n   */\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @protected\n   */\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1);\n      this.setupChangeEvents_(featureKey$1, feature$1);\n\n      var geometry = feature$1.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n   * @private\n   */\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  };\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  VectorSource.prototype.clear = function clear (opt_fast) {\n    if (opt_fast) {\n      for (var featureId in this.featureChangeKeys_) {\n        var keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (var id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  };\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\n    return this.featuresCollection_;\n  };\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeatures = function getFeatures () {\n    var features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default>} */ (features)\n    );\n  };\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default} Closest feature.\n   * @api\n   */\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  };\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n   * @api\n   */\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  VectorSource.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  VectorSource.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    var id = feature.getId();\n    if (id !== undefined) {\n      var sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  };\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\n    var id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.undefIdIndex_;\n    }\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    var loop = function ( i, ii ) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this$1.loading = this$1.loader_ !== VOID;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n  };\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default} feature Feature to remove.\n   * @api\n   */\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\n    var featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  };\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\n    var removed = false;\n    for (var id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  };\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  VectorSource.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source));\n\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {import(\"./Fill.js\").default}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {import(\"./Stroke.js\").default}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {import(\"./Text.js\").default}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && typeof geometry === 'object') {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {import(\"./Fill.js\").default} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {import(\"./Fill.js\").default} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {import(\"./Image.js\").default} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {import(\"./Image.js\").default} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {import(\"./Stroke.js\").default} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {import(\"./Text.js\").default} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {import(\"./Text.js\").default} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      var style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\nvar IconImage = /*@__PURE__*/(function (EventTarget) {\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ?\n      /** @type {HTMLCanvasElement} */ (document.createElement('canvas')) :\n      null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.tainted_;\n\n  }\n\n  if ( EventTarget ) IconImage.__proto__ = EventTarget;\n  IconImage.prototype = Object.create( EventTarget && EventTarget.prototype );\n  IconImage.prototype.constructor = IconImage;\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  IconImage.prototype.isTainted_ = function isTainted_ () {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      this.tainted_ = false;\n      var context = createCanvasContext2D(1, 1);\n      try {\n        context.drawImage(this.image_, 0, 0);\n        context.getImageData(0, 0, 1, 1);\n      } catch (e) {\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.dispatchChangeEvent_ = function dispatchChangeEvent_ () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageError_ = function handleImageError_ () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  IconImage.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  };\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  IconImage.prototype.getImageState = function getImageState () {\n    return this.imageState_;\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  IconImage.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  };\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  IconImage.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  IconImage.prototype.getSrc = function getSrc () {\n    return this.src_;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   */\n  IconImage.prototype.load = function load () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.replaceColor_ = function replaceColor_ () {\n    if (!this.color_ || this.isTainted_()) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    var ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  IconImage.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return IconImage;\n}(EventTarget));\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport {get as getIconImage} from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /*@__PURE__*/(function (ImageStyle) {\n  function Icon(opt_options) {\n    var options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    var scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    var image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    var src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    var imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  if ( ImageStyle ) Icon.__proto__ = ImageStyle;\n  Icon.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  Icon.prototype.constructor = Icon;\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  Icon.prototype.clone = function clone () {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getAnchor = function getAnchor () {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    var anchor = this.anchor_;\n    var size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  };\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  Icon.prototype.setAnchor = function setAnchor (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  Icon.prototype.getColor = function getColor () {\n    return this.color_;\n  };\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  Icon.prototype.getImage = function getImage (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageSize = function getImageSize () {\n    return this.iconImage_.getSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.getImageSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageState = function getImageState () {\n    return this.iconImage_.getImageState();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getOrigin = function getOrigin () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  };\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  Icon.prototype.getSrc = function getSrc () {\n    return this.iconImage_.getSrc();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getSize = function getSize () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return listen(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  Icon.prototype.load = function load () {\n    this.iconImage_.load();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n    unlisten(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  return Icon;\n}(ImageStyle));\n\n\nexport default Icon;\n\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: Array.isArray(color) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    var color = this.color_;\n    if (color) {\n      if (Array.isArray(color) || typeof color == 'string') {\n        this.checksum_ = 'f' + asString(/** @type {import(\"../color.js\").Color|string} */ (color));\n      } else {\n        this.checksum_ = getUid(this.color_);\n      }\n    } else {\n      this.checksum_ = 'f-';\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: Array.isArray(color) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_);\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n};\n\n/**\n * Clones the style.\n * @return {ImageStyle} The cloned style.\n * @api\n */\nImageStyle.prototype.clone = function clone () {\n  return new ImageStyle({\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor () {\n  return abstract();\n};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../ImageState.js\").default} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n  return abstract();\n};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin () {\n  return abstract();\n};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {import(\"../size.js\").Size} Size.\n */\nImageStyle.prototype.getSize = function getSize () {\n  return abstract();\n};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n  return abstract();\n};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load () {\n  abstract();\n};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n  abstract();\n};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  var decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  var s1 = ('' + v1).split('.');\n  var s2 = ('' + v2).split('.');\n\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n    var n1 = parseInt(s1[i] || '0', 10);\n    var n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\n//# sourceMappingURL=string.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /*@__PURE__*/(function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /*@__PURE__*/(function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map"],"sourceRoot":""}