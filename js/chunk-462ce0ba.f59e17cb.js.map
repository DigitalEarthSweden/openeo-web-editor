{"version":3,"sources":["webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/format/XLink.js","webpack:///./node_modules/ol/format/XML.js","webpack:///./node_modules/ol/format/xsd.js","webpack:///./node_modules/ol/format/OWS.js","webpack:///./node_modules/ol/format/WMTSCapabilities.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/format/Feature.js","webpack:///./node_modules/ol/format/JSONFeature.js","webpack:///./node_modules/ol/format/GeoJSON.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/geom/GeometryCollection.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/geom/flat/segments.js"],"names":["drawTextOnPath","flatCoordinates","offset","end","stride","text","measure","startM","maxAngle","result","reverse","numChars","length","x1","y1","data","index","previousAngle","x2","y2","segmentM","segmentLength","Math","sqrt","pow","chunk","chunkLength","i","char","charAt","charLength","charM","segmentPos","angle","atan2","PI","undefined","delta","abs","interpolate","x","y","unshift","push","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","LinearRing","SimpleGeometry","coordinates","opt_layout","call","this","maxDelta_","maxDeltaRevision_","Array","isArray","setCoordinates","setFlatCoordinates","__proto__","prototype","Object","create","constructor","clone","slice","layout","closestPointXY","closestPoint","minSquaredDistance","getExtent","getRevision","getArea","getCoordinates","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","XY","getType","LINEAR_RING","intersectsExtent","extent","setLayout","changed","altKeyOnly","mapBrowserEvent","originalEvent","altKey","metaKey","ctrlKey","shiftKey","altShiftKeysOnly","focus","event","target","getTargetElement","document","activeElement","always","click","type","mouseActionButton","button","never","pointerMove","singleClick","SINGLECLICK","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerEvent","pointerType","primaryAction","isPrimary","createCanvasContext2D","opt_width","opt_height","canvas","createElement","width","height","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","getInteriorPointOfArray","ends","flatCenters","flatCentersOffset","opt_dest","ii","intersections","r","rr","pointX","NaN","maxSegmentLength","Infinity","sort","isNaN","getInteriorPointsOfMultiArray","endss","interiorPoints","boundingExtent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","opt_extent","minX","min","apply","minY","maxX","max","maxY","createOrUpdate","buffer","value","closestSquaredDistanceXY","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","extendFlatCoordinates","equals","extend","extendXY","forEachCorner","callback","opt_this","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","area","isEmpty","getWidth","getHeight","getCenter","getCorner","corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","Target","Disposable","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","indexOf","dispatchEvent","evt","propagate","propagationStopped","pendingRemovals","removeEventListener","disposeInternal","getListeners","hasListener","opt_type","keys","splice","UP","DOWN","douglasPeucker","simplifiedOffset","n","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance","i$1","douglasPeuckerArray","simplifiedEnds","snap","tolerance","round","quantize","dx1","dy1","dx2","dy2","quantizeArray","quantizeMultiArray","simplifiedEndss","bindListener","listenerObj","boundListener","bindTo","callOnce","unlistenByKey","findListener","opt_setDeleteIndex","deleteIndex","listenerMap","getListenerMap","opt_create","ol_lm","removeListenerMap","removeListeners","listen","opt_once","listenOnce","unlisten","key","unlistenAll","ARRAY_BUFFER","JSON","TEXT","XML","NAMESPACE_URI","readHref","getAttributeNS","read","source","doc","readFromDocument","readFromNode","readDecimal","s","readDecimalString","string","m","exec","parseFloat","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","NAMESPACE_URIS","PARSERS","readServiceIdentification","readServiceProvider","readOperationsMetadata","OWS","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","owsObject","ADDRESS_PARSERS","ALLOWED_VALUES_PARSERS","readValue","CONSTRAINT_PARSERS","readAllowedValues","CONTACT_INFO_PARSERS","readPhone","readAddress","DCP_PARSERS","readHttp","HTTP_PARSERS","readGet","OPERATION_PARSERS","readDcp","OPERATIONS_METADATA_PARSERS","readOperation","PHONE_PARSERS","REQUEST_METHOD_PARSERS","readConstraint","SERVICE_CONTACT_PARSERS","readContactInfo","SERVICE_IDENTIFICATION_PARSERS","SERVICE_PROVIDER_PARSERS","readServiceContact","objectStack","name","getAttribute","href","object","OWS_NAMESPACE_URIS","readContents","WMTSCapabilities","owsParser_","version","WMTSCapabilityObject","CONTENTS_PARSERS","readLayer","readTileMatrixSet","LAYER_PARSERS","readStyle","readTileMatrixSetLink","readDimensions","readResourceUrl","readWgs84BoundingBox","STYLE_PARSERS","readLegendUrl","TMS_LINKS_PARSERS","readTileMatrixLimitsList","TMS_LIMITS_LIST_PARSERS","readTileMatrixLimits","TMS_LIMITS_PARSERS","DIMENSION_PARSERS","WGS84_BBOX_READERS","readCoordinates","TMS_PARSERS","readTileMatrix","TM_PARSERS","style","isDefault","format","template","resourceType","resource","legend","split","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","MultiLineString","opt_ends","ends_","getLayout","lineStrings","lineString","getFlatCoordinates","appendLineString","getCoordinateAtM","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","MULTI_LINE_STRING","tmp","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","right","isClockwise","linearRingsAreOriented","orientLinearRings","orientLinearRingsArray","XYZ","TRUE","FALSE","VOID","lineStringLength","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","POLYGON","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","getStride","arrayLength","j","polygon","makeRegular","getRadius","radius","startAngle","loadFeaturesXhr","url","success","failure","projection","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","bind","onerror","send","features","dataProjection","sourceOrTile","addFeatures","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAt","fraction","getLength","getFlatMidpoint","LINE_STRING","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","linearRingss","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","jj","appendPolygon","len","newEndss","orient","inflate","getEndss","getFlatInteriorPoints","getInteriorPoints","MultiPoint","GeometryLayout","getPolygon","prevEnds","getPolygons","GeometryType","MULTI_POLYGON","deflate","lastEnds","tmpTransform","Geometry","BaseObject","extent_","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","getClosestPoint","point","opt_closestPoint","intersectsCoordinate","computeExtent","rotate","anchor","scale","sx","opt_sy","opt_anchor","simplify","getSimplifiedGeometry","translate","transform","destination","sourceProj","getUnits","TILE_PIXELS","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","assignClosest","offset1","offset2","t","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","appendPoint","multiPoint","getPoint","getPoints","points","MULTI_POINT","getFirstCoordinate","getLastCoordinate","toString","hasOwnProperty","simplifiedGeometry","getStrideForLayout","nesting","getLayoutForStride","sy","transformGeom2D","simpleGeometry","defaultFeatureProjection","getReadOptions","opt_options","options","adaptOptions","readFeature","readGeometry","writeFeature","feature","writeFeatures","writeGeometry","geometry","transformWithOptions","write","transformed","decimals","power","FeatureFormat","JSONFeature","FormatType","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","GeoJSON","geometryName_","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","Feature","setGeometryName","setGeometry","setId","setProperties","geoJSONObject","geoJSONFeatureCollection","geoJSONFeatures","crs","properties","id","getId","getGeometry","getProperties","getGeometryName","objects","POINT","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","GEOMETRY_COLLECTION","readGeometryCollectionGeometry","Error","geometries","map","GeometryCollection","Point","geoJSON","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","CIRCLE","getGeometriesArray","rightHanded","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","interpolatePoint","pointY","cumulativeLengths","o","lineStringCoordinateAtM","lo","hi","mid","m0","m1","lineStringsCoordinateAtM","twiceArea","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","transform2D","dest","anchorX","anchorY","k","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","easeIn","easeOut","inAndOut","linear","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","cache","font","family","fontFamily","Event","stopPropagation","preventDefault","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometries","cloneGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","forEach","ret"],"mappings":"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","file":"js/chunk-462ce0ba.f59e17cb.js","sourcesContent":["/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/format/XLink\n */\n\n\n/**\n * @const\n * @type {string}\n */\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n\n//# sourceMappingURL=XLink.js.map","/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nvar XML = function XML () {};\n\nXML.prototype.read = function read (source) {\n  if (!source) {\n    return null;\n  } else if (typeof source === 'string') {\n    var doc = parse(source);\n    return this.readFromDocument(doc);\n  } else if (isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else {\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n};\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function readFromDocument (doc) {};\n\n/**\n * @abstract\n * @param {Element} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function readFromNode (node) {};\n\nexport default XML;\n\n//# sourceMappingURL=XML.js.map","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, DOCUMENT} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  var s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  var s = getAllTextContent(node, false);\n  var dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  var s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  var s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  var m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, (bool) ? '1' : '0');\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(DOCUMENT.createCDATASection(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  var date = new Date(dateTime * 1000);\n  var string = date.getUTCFullYear() + '-' +\n      padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      padNumber(date.getUTCDate(), 2) + 'T' +\n      padNumber(date.getUTCHours(), 2) + ':' +\n      padNumber(date.getUTCMinutes(), 2) + ':' +\n      padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  var string = decimal.toPrecision();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  var string = nonNegativeInteger.toString();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n//# sourceMappingURL=xsd.js.map","/**\n * @module ol/format/OWS\n */\nimport {readHref} from './XLink.js';\nimport XML from './XML.js';\nimport {readString} from './xsd.js';\nimport {makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\n  });\n\n\nvar OWS = /*@__PURE__*/(function (XML) {\n  function OWS() {\n    XML.call(this);\n  }\n\n  if ( XML ) OWS.__proto__ = XML;\n  OWS.prototype = Object.create( XML && XML.prototype );\n  OWS.prototype.constructor = OWS;\n\n  /**\n   * @inheritDoc\n   */\n  OWS.prototype.readFromDocument = function readFromDocument (doc) {\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  OWS.prototype.readFromNode = function readFromNode (node) {\n    var owsObject = pushParseAndPop({},\n      PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  };\n\n  return OWS;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DeliveryPoint': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'AdministrativeArea': makeObjectPropertySetter(readString),\n    'PostalCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString),\n    'ElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ALLOWED_VALUES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Value': makeObjectPropertyPusher(readValue)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONSTRAINT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFO_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Phone': makeObjectPropertySetter(readPhone),\n    'Address': makeObjectPropertySetter(readAddress)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHttp)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertyPusher(readGet),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DCP': makeObjectPropertySetter(readDcp)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONS_METADATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Operation': readOperation\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PHONE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Voice': makeObjectPropertySetter(readString),\n    'Facsimile': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_METHOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Constraint': makeObjectPropertyPusher(readConstraint)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_CONTACT_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'IndividualName': makeObjectPropertySetter(readString),\n        'PositionName': makeObjectPropertySetter(readString),\n        'ContactInfo': makeObjectPropertySetter(readContactInfo)\n      });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_IDENTIFICATION_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'Abstract': makeObjectPropertySetter(readString),\n        'AccessConstraints': makeObjectPropertySetter(readString),\n        'Fees': makeObjectPropertySetter(readString),\n        'Title': makeObjectPropertySetter(readString),\n        'ServiceTypeVersion': makeObjectPropertySetter(readString),\n        'ServiceType': makeObjectPropertySetter(readString)\n      });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PROVIDER_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'ProviderName': makeObjectPropertySetter(readString),\n        'ProviderSite': makeObjectPropertySetter(readHref),\n        'ServiceContact': makeObjectPropertySetter(readServiceContact)\n      });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({},\n    ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({},\n    ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name},\n    CONSTRAINT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({},\n    CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({},\n    DCP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  var href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop({'href': href},\n    REQUEST_METHOD_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  var name = node.getAttribute('name');\n  var value = pushParseAndPop({},\n    OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  var object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({},\n    OPERATIONS_METADATA_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({},\n    PHONE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_IDENTIFICATION_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_CONTACT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_PROVIDER_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\n\nexport default OWS;\n\n//# sourceMappingURL=OWS.js.map","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {boundingExtent} from '../extent.js';\nimport OWS from './OWS.js';\nimport {readHref} from './XLink.js';\nimport XML from './XML.js';\nimport {readString, readNonNegativeInteger, readDecimal} from './xsd.js';\nimport {pushParseAndPop, makeStructureNS,\n  makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar OWS_NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nvar WMTSCapabilities = /*@__PURE__*/(function (XML) {\n  function WMTSCapabilities() {\n    XML.call(this);\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  if ( XML ) WMTSCapabilities.__proto__ = XML;\n  WMTSCapabilities.prototype = Object.create( XML && XML.prototype );\n  WMTSCapabilities.prototype.constructor = WMTSCapabilities;\n\n  /**\n   * @inheritDoc\n   */\n  WMTSCapabilities.prototype.readFromDocument = function readFromDocument (doc) {\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMTSCapabilities.prototype.readFromNode = function readFromNode (node) {\n    var version = node.getAttribute('version').trim();\n    var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  };\n\n  return WMTSCapabilities;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTENTS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LINKS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n  });\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_LIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WGS84_BBOX_READERS = makeStructureNS(\n  OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  var style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  var isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  var format = node.getAttribute('format');\n  var template = node.getAttribute('template');\n  var resourceType = node.getAttribute('resourceType');\n  var resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nfunction readWgs84BoundingBox(node, objectStack) {\n  var coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  var legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  var coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  var x = +coordinates[0];\n  var y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\n\nexport default WMTSCapabilities;\n\n//# sourceMappingURL=WMTSCapabilities.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n        var lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array<LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      var sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var polygons = /** @type {Array<Polygon>} */ (coordinates);\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = polygons.length; i < ii; ++i) {\n        var polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array<Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/format/Feature\n */\nimport {assign} from '../obj.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = function FeatureFormat() {\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Options.\n * @return {ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function getReadOptions (source, opt_options) {\n  var options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {WriteOptions|ReadOptions|undefined} options\n *   Options.\n * @protected\n * @return {WriteOptions|ReadOptions|undefined}\n *   Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function adaptOptions (options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {import(\"../extent.js\").Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function getLastExtent () {\n  return null;\n};\n\n/**\n * @abstract\n * @return {import(\"./FormatType.js\").default} Format.\n */\nFeatureFormat.prototype.getType = function getType () {\n  return abstract();\n};\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../Feature.js\").FeatureLike} Feature.\n */\nFeatureFormat.prototype.readFeature = function readFeature (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n */\nFeatureFormat.prototype.readFeatures = function readFeatures (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function readGeometry (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {import(\"../proj/Projection.js\").default} Projection.\n */\nFeatureFormat.prototype.readProjection = function readProjection (source) {\n  return abstract();\n};\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function writeFeature (feature, opt_options) {\n  return abstract();\n};\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n  return abstract();\n};\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n  return abstract();\n};\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  var featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent}\n   */\n  var transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (Array.isArray(geometry)) {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    } else {\n      transformed = (write ? /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined &&\n    !Array.isArray(transformed)) {\n    var power = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    var transform = function(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function JSONFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) JSONFeature.__proto__ = FeatureFormat;\n  JSONFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  JSONFeature.prototype.constructor = JSONFeature;\n\n  /**\n   * @inheritDoc\n   */\n  JSONFeature.prototype.getType = function getType () {\n    return FormatType.JSON;\n  };\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  JSONFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  JSONFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  JSONFeature.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  JSONFeature.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  JSONFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  JSONFeature.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  JSONFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromObject(getObject(source));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  JSONFeature.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    return abstract();\n  };\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  JSONFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  JSONFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  JSONFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return abstract();\n  };\n\n  return JSONFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\nexport default JSONFeature;\n\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/format/GeoJSON\n */\n\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /*@__PURE__*/(function (JSONFeature) {\n  function GeoJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n  }\n\n  if ( JSONFeature ) GeoJSON.__proto__ = JSONFeature;\n  GeoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  GeoJSON.prototype.constructor = GeoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    var geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null\n      };\n    }\n\n    var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties']);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      var geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    var crs = object['crs'];\n    var projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return (\n      /** @type {import(\"../proj/Projection.js\").default} */ (projection)\n    );\n  };\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    var object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null\n    };\n\n    var id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n    }\n\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects\n    };\n  };\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  return GeoJSON;\n}(JSONFeature));\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  var geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, opt_options));\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, true, opt_options));\n  var type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  var geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: []\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\n    var options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries\n  };\n}\n\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\nexport default GeoJSON;\n\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /*@__PURE__*/(function (Geometry) {\n  function GeometryCollection(opt_geometries) {\n\n    Geometry.call(this);\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    this.listenGeometriesChange_();\n  }\n\n  if ( Geometry ) GeometryCollection.__proto__ = Geometry;\n  GeometryCollection.prototype = Object.create( Geometry && Geometry.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.unlistenGeometriesChange_ = function unlistenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.listenGeometriesChange_ = function listenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  GeometryCollection.prototype.clone = function clone () {\n    var geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.containsXY = function containsXY (x, y) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.computeExtent = function computeExtent (extent) {\n    createOrUpdateEmpty(extent);\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  };\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.getGeometries = function getGeometries () {\n    return cloneGeometries(this.geometries_);\n  };\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  GeometryCollection.prototype.getGeometriesArray = function getGeometriesArray () {\n    return this.geometries_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometries = [];\n      var geometries = this.geometries_;\n      var simplified = false;\n      for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometry = geometries[i];\n        var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n        simplifiedGeometries.push(simplifiedGeometry);\n        if (simplifiedGeometry !== geometry) {\n          simplified = true;\n        }\n      }\n      if (simplified) {\n        var simplifiedGeometryCollection = new GeometryCollection(null);\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n        return simplifiedGeometryCollection;\n      } else {\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.getType = function getType () {\n    return GeometryType.GEOMETRY_COLLECTION;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    return this.geometries_.length === 0;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.rotate = function rotate (angle, anchor) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.setGeometries = function setGeometries (geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  };\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  GeometryCollection.prototype.setGeometriesArray = function setGeometriesArray (geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.applyTransform = function applyTransform (transformFn) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.translate = function translate (deltaX, deltaY) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.disposeInternal = function disposeInternal () {\n    this.unlistenGeometriesChange_();\n    Geometry.prototype.disposeInternal.call(this);\n  };\n\n  return GeometryCollection;\n}(Geometry));\n\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  var clonedGeometries = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map"],"sourceRoot":""}